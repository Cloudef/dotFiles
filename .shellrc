#!/bin/sh
# ^ For vim syntax

###########################
## Enviroiment Variables ##
###########################
# DEFAULT PROGRAMS
export EDITOR="vim"
export BROWSER="dwb"

# Fix sorting
export LC_ALL=
export LC_COLLATE="C"

# GLIB
export G_BROKEN_FILENAMES=1
export G_FILENAME_ENCODING="UTF-8"

# ALSA
export SDL_AUDIODRIVER="alsa"

# SDL Head fix
export SDL_VIDEO_FULLSCREEN_HEAD=1

# TTY THEME
export TTY_THEME="console_phraktured"

# $HOME/BIN
export PATH="$HOME/bin:$PATH"

# Compile options
# [ ARM enviroiment will override ]
export CFLAGS="-march=native -mtune=native -O2 -fPIC -pipe"
export CXXFLAGS="${CFLAGS}"
export LDFLAGS="-Wl,--hash-style=gnu -Wl,--as-needed"

# Fix JAVA
export _JAVA_AWT_WM_NONREPARENTING=1

# Old GTK Applications
export GDK_USE_XFT=1

# Make GEGL use OpenCL
export GEGL_USE_OPENCL=yes

################################
## Test for interactive shell ##
################################
[[ "$-" == *i* ]] || return # Shell is non-interactive.  Be done now!

# on SSH export linux as TERM
[ "$SSH_TTY" ] && export TERM="linux"

########
# LESS #
########
# Colors for man pages
# export LESS_TERMCAP_mb=$'\E[01;32m'
# export LESS_TERMCAP_md=$'\E[01;31m'
# export LESS_TERMCAP_me=$'\E[0m'
# export LESS_TERMCAP_se=$'\E[0m'
# export LESS_TERMCAP_so=$'\E[01;33m'
# export LESS_TERMCAP_ue=$'\E[0m'
# export LESS_TERMCAP_us=$'\E[01;32m'

# Use vim as less instead :)
VLESS="$(find /usr/share/vim -name 'less.sh')"
[ ! "$VLESS" ] || alias less="$VLESS"

######################################
## Keep a desktop system responsive ##
######################################
schedtool -D $$
ionice -c 3 -p $$

# Store current shell
export CURRENT_SHELL="$(basename $SHELL)"

#################
## ZSH Options ##
#################
[[ "$0" == "$HOME/.shellrc" ]] && 0="zsh" # Ugly hack
if [[ "$0" == "zsh" ]];then
   unsetopt correct_all # I can't see why people like this
                        # Stop typing wrong silly people
   bindkey -v           # Vim bindings
   bindkey "\e[1~"   beginning-of-line    # Home
   bindkey "^A"      beginning-of-line    # CTRL+A
   bindkey "\e[4~"   end-of-line          # End
   bindkey "\e[5~"   beginning-of-history # PageUp
   bindkey "\e[6~"   end-of-history       # PageDown
   bindkey "\e[2~"   quoted-insert        # Ins
   bindkey "\e[3~"   delete-char          # Del
   bindkey "\e[5C"   forward-word
   bindkey "\eOc"    emacs-forward-word
   bindkey "\e[5D"   backward-word
   bindkey "\eOd"    emacs-backward-word
   bindkey "\e\e[C"  forward-word
   bindkey "\e\e[D"  backward-word
   bindkey "\e[Z"    reverse-menu-complete # Shift+Tab
   bindkey "\e[7~"   beginning-of-line    # Home
   bindkey "\e[8~"   end-of-line          # End
   bindkey "\eOH"    beginning-of-line
   bindkey "\eOF"    end-of-line
   bindkey "^I"      menu-complete        # Why press tab twice?
   bindkey "^Z"      undo                 # Undo
   bindkey '^R' history-incremental-search-backward

   export CURRENT_SHELL="zsh"
fi

##################
## Bash Options ##
##################
if [[ "$0" == "bash" ]];then
   shopt -s cdspell
   shopt -s checkwinsize
   shopt -s cmdhist
   shopt -s dirspell
   shopt -s histappend
   shopt -s hostcomplete
   shopt -s no_empty_cmd_completion
   shopt -s nocaseglob

   export CURRENT_SHELL="bash"
fi

################
## TTY COLORS ##
################
# if [[ "$TERM" == "linux" ]]; then
#    colors=($(sed 's/#.*//' "$HOME/.Xcolors/$TTY_THEME"))
#    for index in ${!colors[@]}
#    do
#           printf '\e]P%x%s' $index ${colors[$index]}
#    done
#    clear
# fi

###############
## LS COLORS ##
###############
eval $( dircolors -b "$HOME/.LS_COLORS" )

########################
## Includes && Prompt ##
########################
source "$HOME/.alias"         # Aliases
source "$HOME/.prompt"        # Prompt
source "$HOME/.funcs"         # Shell functions
source "$HOME/.sshagent"      # Keeps you from entering SSH password repeateply
source "$HOME/.private_alias" # Private aliases

[[ "$0" == "bash" ]] && PROMPT_COMMAND=prompt
# For zsh, use oh-my-zsh

#############
## Startup ##
#############
setcolors
welcome

#############
## ARM Dev ##
#############
export PNDSDK="/media/Storage/Dev/Pandora/pandora-dev/arm-2011.09"
bitbake() {
   local nopop=0
   unset LDFLAGS
   unset CFLAGS
   unset CXXFLAGS
   source "$HOME/.oe/environment-openpandora"
   [[ "$PWD" == "$OE_BUILD_DIR" ]] && nopop=1
   [[ $nopop -eq 0 ]] && pushd "$OE_BUILD_DIR" &> /dev/null
   schedtool -D -e ionice -c 3 bitbake $@ # Let it calm down
   [[ $nopop -eq 0 ]] && popd &> /dev/null
   source "$HOME/.oe/environment-openpandora-clean"
}
pandora() {
   export PND_BASEDIR="/media/Storage/Dev/Pandora/pandora-dev/utmp"
   export TARGET_SYS="arm-none-linux-gnueabi"
   export CONFIG_SITE="$PNDSDK/site-config"
   export OLD_PATH="$PATH"
   export PATH="$PNDSDK/bin:$PATH:$PNDSDK/usr/bin"
   export LIBTOOL_SYSROOT_PATH="$PNDSDK"
   export PKG_CONFIG_PATH="$PNDSDK/usr/lib/pkgconfig"
   export CPATH="$PNDSDK/usr/include:$CPATH"
   export CFLAGS="-DPANDORA -O2 -pipe -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize -ffast-math -fsingle-precision-constant -I$PNDSDK/usr/include"
   export CXXFLAGS="-I$PNDSDK/usr/include"
   export LDFLAGS="-L$PNDSDK/usr/lib -Wl,-rpath,$PNDSDK/usr/lib"
   export LIBRARY_PATH="$PNDSDK/usr/lib"
   export CPPFLAGS="$CFLAGS"
   export CROSSTOOL="$PNDSDK/bin/$TARGET_SYS"
   export CXX="$CROSSTOOL-g++" CC="$CROSSTOOL-gcc" AR="$CROSSTOOL-ar" AS="$CROSSTOOL-as" RANLIB="$CROSSTOOL-ranlib" STRIP="$CROSSTOOL-strip"
   export HOST_CC=gcc HOST_CXX=g++

   alias opkg="$PNDSDK/../sdk_utils/opkg-pandora.sh"
   alias genpxml="$PNDSDK/../sdk_utils/genpxml.sh"
   alias pndmake="$PNDSDK/../sdk_utils/pnd_make.sh"
   alias pndconfigure="$PNDSDK/../sdk_utils/pandora_configure.sh"

}
unpandora() {
   export PATH="$OLD_PATH"
   unset LIBRARY_PATH CONFIG_SITE LIBTOOL_SYSROOT_PATH PKG_CONFIG_PATH CPATH CFLAGS CXXFLAGS CPPFLAGS LDFLAGS CROSSTOOL CXX CC AR AS RANLIB HOST_CC HOST_CXX
   unalias pndconfigure
   unalias pndmake
   unalias genpxml
   unalias opkg
}
